{"version":3,"sources":["../../src/pages/account/settings/settings.module.ts","../../src/pages/account/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AACS;AAW1D,IAAa,yBAAyB;IAAtC;IAAwC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA5B,yBAAyB;IATrC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sEAAmB;SACpB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sEAAmB,CAAC;YAC7C,wEAAY;SACb;KACF,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACdI;AACa;AACkB;AACb;AACL;AACT;AAO9C,IAAa,mBAAmB;IAG9B,6BAAmB,OAAsB,EAAU,QAAkB,EAAU,UAAsB,EAAU,SAA2B,EAAU,KAAsB,EAAU,IAAkB;QAAtM,iBAOC;QAPkB,YAAO,GAAP,OAAO,CAAe;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,cAAS,GAAT,SAAS,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAc;QACpM,IAAI,CAAC,GAAG,GAAG,4DAAG,CAAC;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAE,aAAG;gBAC1C,KAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;YACzB,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,oCAAM,GAAN;QAAA,iBAiBC;QAhBC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAE,WAAC;YACxE,IAAI,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC9B,KAAK,EAAE,CAAC,CAAC,MAAM;gBACf,OAAO,EAAE,CAAC,CAAC,UAAU;gBACrB,OAAO,EAAE,CAAC;wBACN,IAAI,EAAE,CAAC,CAAC,MAAM;qBACf,EAAC;wBACA,IAAI,EAAE,CAAC,CAAC,GAAG;wBACX,OAAO,EAAE;4BACP,KAAI,CAAC,aAAa,EAAE,CAAC;wBACvB,CAAC;qBACF,CAAC;aACL,CAAC,CAAC;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2CAAa,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YACtB,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;YACzB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAI,GAAJ,UAAK,IAAI,EAAE,MAAM;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IAC3C,CAAC;IAEF,0BAAC;AAAD,CAAC;AA1CY,mBAAmB;IAJ/B,wEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;OACL;KAC7B,CAAC;wBAIsM;AAuCvM;SA1CY,mBAAmB,Q","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AccountSettingsPage } from './settings';\nimport { SharedModule } from '../../../app/shared.module';\n\n@NgModule({\n  declarations: [\n    AccountSettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountSettingsPage),\n    SharedModule\n  ],\n})\nexport class AccountSettingsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/settings/settings.module.ts","import { Component } from '@angular/core';\nimport { AppVersion } from '@ionic-native/app-version';\nimport { IonicPage, Platform, AlertController, NavController } from 'ionic-angular';\nimport { UserProvider } from '../../../providers/providers';\nimport { TranslateService } from '@ngx-translate/core';\nimport { App } from '../../../app/app.global';\n\n@IonicPage()\n@Component({\n  selector: 'page-account-settings',\n  templateUrl: 'settings.html',\n})\nexport class AccountSettingsPage {\n  app: any;\n\n  constructor(public navCtrl: NavController, private platform: Platform, private appVersion: AppVersion, private translate: TranslateService, private alert: AlertController, private user: UserProvider) {\n    this.app = App;\n    if (this.platform.is('cordova')) {\n      this.appVersion.getVersionNumber().then( res=> {\n        this.app.version = res;\n      })\n    }\n  }\n\n  logout() {\n    this.translate.get(['LOGOUT', 'LOGOUT_MSG', 'YES', 'CANCEL']).subscribe( x=> {\n      let confirm = this.alert.create({\n        title: x.LOGOUT,\n        message: x.LOGOUT_MSG,\n        buttons: [{\n            text: x.CANCEL\n          },{\n            text: x.YES,\n            handler: () => {\n              this.confirmLogout();\n            }\n          }]\n      });\n      confirm.present();\n    });\n\n  }\n\n  confirmLogout(){\n    this.user.logout().then(() => {\n      this.navCtrl.popToRoot();\n      this.navCtrl.parent.select(0);\n    });\n  }\n\n  goTo(page, params){\n\t\tthis.navCtrl.push(page, {params: params});\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/settings/settings.ts"],"sourceRoot":""}